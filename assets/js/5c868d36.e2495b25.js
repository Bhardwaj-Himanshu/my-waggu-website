"use strict";(self.webpackChunkwagtail=self.webpackChunkwagtail||[]).push([[589],{3905:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>g});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function l(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},o=Object.keys(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)a=o[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},m="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(a),u=r,g=m["".concat(s,".").concat(u)]||m[u]||d[u]||o;return a?n.createElement(g,i(i({ref:t},c),{},{components:a})):n.createElement(g,i({ref:t},c))}));function g(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=a.length,i=new Array(o);i[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[m]="string"==typeof e?e:r,i[1]=l;for(var p=2;p<o;p++)i[p]=a[p];return n.createElement.apply(null,i)}return n.createElement.apply(null,a)}u.displayName="MDXCreateElement"},187:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>l,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const o={sidebar_position:1},i="Start the Server",l={unversionedId:"tutorial-basics/create-a-page",id:"tutorial-basics/create-a-page",title:"Start the Server",description:"Let's, Play with it.",source:"@site/docs/tutorial-basics/create-a-page.md",sourceDirName:"tutorial-basics",slug:"/tutorial-basics/create-a-page",permalink:"/wagtail-demo.github.io/docs/tutorial-basics/create-a-page",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/tutorial-basics/create-a-page.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"1.1 Tutorial - Basics",permalink:"/wagtail-demo.github.io/docs/category/11-tutorial---basics"},next:{title:"A Basic Blog",permalink:"/wagtail-demo.github.io/docs/tutorial-basics/create-a-document"}},s={},p=[{value:"Start the server",id:"start-the-server-1",level:3},{value:"Extend the HomePage model",id:"extend-the-homepage-model",level:2}],c={toc:p},m="wrapper";function d(e){let{components:t,...a}=e;return(0,r.kt)(m,(0,n.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"start-the-server"},"Start the Server"),(0,r.kt)("p",null,"Let's, ",(0,r.kt)("strong",{parentName:"p"},"Play with it.")),(0,r.kt)("h3",{id:"start-the-server-1"},"Start the server"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"python manage.py runserver\n")),(0,r.kt)("p",null,"If everything worked, ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"http://127.0.0.1:8000"},"http://127.0.0.1:8000"))," will show you a welcome page:"),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://docs.wagtail.org/en/stable/_images/tutorial_1.png",alt:null})),(0,r.kt)("p",null,"You can now access the administrative area at ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("a",{parentName:"strong",href:"http://127.0.0.1:8000/admin"},"http://127.0.0.1:8000/admin"))),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://docs.wagtail.org/en/stable/_images/tutorial_2.png",alt:null})),(0,r.kt)("h2",{id:"extend-the-homepage-model"},"Extend the HomePage model"),(0,r.kt)("p",null,"Out of the box, the \u201chome\u201d app defines a blank ",(0,r.kt)("inlineCode",{parentName:"p"},"HomePage")," model in ",(0,r.kt)("inlineCode",{parentName:"p"},"models.py"),", along with a migration that creates a homepage and configures Wagtail to use it."),(0,r.kt)("p",null,"Edit ",(0,r.kt)("inlineCode",{parentName:"p"},"home/models.py")," as follows, to add a body field to the model:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-py"},"from django.db import models\n\nfrom wagtail.models import Page\nfrom wagtail.fields import RichTextField\nfrom wagtail.admin.panels import FieldPanel\n\n\nclass HomePage(Page):\n    body = RichTextField(blank=True)\n\n    content_panels = Page.content_panels + [\n        FieldPanel('body'),\n    ]\n")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"body")," is defined as ",(0,r.kt)("strong",{parentName:"p"},"RichTextField"),", a special Wagtail field. When ",(0,r.kt)("strong",{parentName:"p"},"blank=True"),", it means that this field is not required and can be empty. You can use any of the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.djangoproject.com/en/stable/ref/models/fields"},"Django core fields"),". ",(0,r.kt)("strong",{parentName:"p"},"content_panels")," define the capabilities and the layout of the editing interface. When you add fields to ",(0,r.kt)("strong",{parentName:"p"},"content_panels"),", it enables them to be edited on the Wagtail interface. ",(0,r.kt)("a",{parentName:"p",href:"https://docs.wagtail.org/en/stable/topics/pages.html"},"More on creating Page models"),"."),(0,r.kt)("p",null,"Run:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"# Creates the migrations file.\npython manage.py makemigrations\n# Executes the migrations and updates the database with your model changes.\npython manage.py migrate\n")),(0,r.kt)("p",null,"You must run the above commands each time you make changes to the model definition."))}d.isMDXComponent=!0}}]);